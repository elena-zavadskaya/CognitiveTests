# Generated by Django 4.2 on 2025-02-24 19:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50, unique=True, verbose_name='Никнейм')),
                ('password_hash', models.CharField(max_length=255, verbose_name='Хэш пароля')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['nickname'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название теста')),
                ('description', models.TextField(verbose_name='Описание теста')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_percentage', models.IntegerField(verbose_name='Процент правильных ответов')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cognitive_tests_app.test', verbose_name='Тест')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cognitive_tests_app.appuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
                'ordering': ['-score_percentage'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('education', models.CharField(blank=True, max_length=255, null=True, verbose_name='Образование')),
                ('speciality', models.CharField(blank=True, max_length=255, null=True, verbose_name='Специальность')),
                ('residence', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место жительства')),
                ('height', models.SmallIntegerField(blank=True, null=True, verbose_name='Рост')),
                ('weight', models.SmallIntegerField(blank=True, null=True, verbose_name='Вес')),
                ('lead_hand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Основная рука')),
                ('diseases', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заболевания')),
                ('smoking', models.BooleanField(blank=True, null=True, verbose_name='Курение')),
                ('alcohol', models.CharField(blank=True, max_length=255, null=True, verbose_name='Алкоголь')),
                ('sport', models.CharField(blank=True, max_length=255, null=True, verbose_name='Спорт')),
                ('insomnia', models.BooleanField(blank=True, null=True, verbose_name='Бессонница')),
                ('current_health', models.SmallIntegerField(blank=True, null=True, verbose_name='Текущее состояние здоровья')),
                ('gaming', models.BooleanField(blank=True, null=True, verbose_name='Игры')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='cognitive_tests_app.appuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'ordering': ['user__nickname'],
            },
        ),
    ]
